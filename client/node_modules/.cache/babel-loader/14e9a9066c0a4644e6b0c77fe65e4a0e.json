{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/ManageStore.js\";\n// FIRST SIMPLE ADD\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar ManageStore =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManageStore, _React$Component);\n\n  function ManageStore() {\n    _classCallCheck(this, ManageStore);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ManageStore).apply(this, arguments));\n  }\n\n  _createClass(ManageStore, [{\n    key: \"renderInput\",\n    value: function renderInput(_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          meta = _ref.meta;\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, meta.error));\n    }\n  }, {\n    key: \"renderRatio\",\n    value: function renderRatio(_ref2) {\n      var input = _ref2.input,\n          label = _ref2.label,\n          meta = _ref2.meta;\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, label), React.createElement(\"select\", Object.assign({}, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Action and Adventure\"), React.createElement(\"option\", {\n        value: \"alternate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Alternate History\"), React.createElement(\"option\", {\n        value: \"childrensliterature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Children literature\"), React.createElement(\"option\", {\n        value: \"comic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Comic book\"), React.createElement(\"option\", {\n        value: \"crime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Crime\"), React.createElement(\"option\", {\n        value: \"drama\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Drama\"), React.createElement(\"option\", {\n        value: \"fantasy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Fantasy\"), React.createElement(\"option\", {\n        value: \"novel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Novel\"), React.createElement(\"option\", {\n        value: \"historicalfiction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"History ficition\"), React.createElement(\"option\", {\n        value: \"horror\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Horror\"), React.createElement(\"option\", {\n        value: \"mystery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Mystery\"), React.createElement(\"option\", {\n        value: \"romance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Romance\"), React.createElement(\"option\", {\n        value: \"pictures\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Picture book\"), React.createElement(\"option\", {\n        value: \"poetry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Poetry\"), React.createElement(\"option\", {\n        value: \"politicalthriller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Political thriller\"), React.createElement(\"option\", {\n        value: \"satire\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Satire\"), React.createElement(\"option\", {\n        value: \"scifi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Science Fiction\"), React.createElement(\"option\", {\n        value: \"short\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Short story\"), React.createElement(\"option\", {\n        value: \"thriller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Thriller\"), React.createElement(\"option\", {\n        value: \"art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Art\"), React.createElement(\"option\", {\n        value: \"biography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Biography\"), React.createElement(\"option\", {\n        value: \"religion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Religion/Spirituality\"), React.createElement(\"option\", {\n        value: \"encyclopedia\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Encyclopedia\"), React.createElement(\"option\", {\n        value: \"guide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Guide\"), React.createElement(\"option\", {\n        value: \"history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"History\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, meta.error));\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"ui form\",\n        onSubmit: this.props.handleSubmit(this.formSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"author\",\n        component: this.renderInput,\n        label: \"Enter author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"bookType\",\n        component: this.renderRatio,\n        label: \"Select type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ManageStore;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    // Zadziała gdy uzytkownik nie wpisze tytułu ksiąki\n    errors.title = 'You must enter title';\n  }\n\n  if (!formValues.author) {\n    //Zadziała gdy uzytkownik nie wpisze autora\n    errors.author = 'You must enter author';\n  }\n\n  if (!formValues.bookType) {\n    errors.bookType = 'Please select type of book';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'addBook',\n  validate: validate\n})(ManageStore);","map":{"version":3,"sources":["/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/ManageStore.js"],"names":["React","Field","reduxForm","ManageStore","input","label","meta","error","formValues","console","log","props","handleSubmit","formSubmit","renderInput","renderRatio","Component","validate","errors","title","author","bookType","form"],"mappings":"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","sourcesContent":["// FIRST SIMPLE ADD\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass ManageStore extends React.Component {\n    renderInput({ input, label, meta }) {\n        return (\n        <div className=\"field\">\n            <label>{label}</label>\n            <input {...input}/>\n            <div>{meta.error}</div>\n        </div>\n        );\n    }\n\n    renderRatio({ input, label, meta }) {\n        return (\n        <div className=\"field\">\n            <label>{label}</label>\n            <select {...input}>\n                <option value=\"action\">Action and Adventure</option>\n                <option value=\"alternate\">Alternate History</option>\n                <option value=\"childrensliterature\">Children literature</option>\n                <option value=\"comic\">Comic book</option>\n                <option value=\"crime\">Crime</option>\n                <option value=\"drama\">Drama</option>\n                <option value=\"fantasy\">Fantasy</option>\n                <option value=\"novel\">Novel</option>\n                <option value=\"historicalfiction\">History ficition</option>\n                <option value=\"horror\">Horror</option>\n                <option value=\"mystery\">Mystery</option>\n                <option value=\"romance\">Romance</option>\n                <option value=\"pictures\">Picture book</option>\n                <option value=\"poetry\">Poetry</option>\n                <option value=\"politicalthriller\">Political thriller</option>\n                <option value=\"satire\">Satire</option>\n                <option value=\"scifi\">Science Fiction</option>\n                <option value=\"short\">Short story</option>\n                <option value=\"thriller\">Thriller</option>\n                <option value=\"art\">Art</option>\n                <option value=\"biography\">Biography</option>\n                <option value=\"religion\">Religion/Spirituality</option>\n                <option value=\"encyclopedia\">Encyclopedia</option>\n                <option value=\"guide\">Guide</option>\n                <option value=\"history\">History</option>\n            </select>\n            <div>{meta.error}</div>\n        </div>\n        );\n    }\n\n    formSubmit(formValues) {\n        console.log(formValues);\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.formSubmit)}>\n                    <Field name=\"title\" component={this.renderInput} label=\"Enter title\"/>\n                    <Field name=\"author\" component={this.renderInput} label=\"Enter author\"/>\n                    <Field name=\"bookType\" component={this.renderRatio} label=\"Select type\"/>\n                    <button className=\"ui button primary\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    \n    if(!formValues.title) {\n        // Zadziała gdy uzytkownik nie wpisze tytułu ksiąki\n         errors.title = 'You must enter title';\n    }\n    if(!formValues.author) {\n        //Zadziała gdy uzytkownik nie wpisze autora\n        errors.author = 'You must enter author';\n    }\n\n    if(!formValues.bookType) {\n        errors.bookType = 'Please select type of book';\n    }\n\n    return errors;\n}\n\nexport default reduxForm({\n    form: 'addBook',\n    validate: validate\n})(ManageStore);"]},"metadata":{},"sourceType":"module"}