{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport books from '../api/books';\nimport { SIGN_IN, SIGN_OUT, ADD_BOOK, FETCH_BOOKS, DELETE_BOOK, EDIT_BOOK } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var addBook = function addBook(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, shelf, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                shelf = formValues.bookShelf;\n                _context.next = 4;\n                return books.post(\"/\".concat(shelf), _objectSpread({}, formValues, {\n                  userId: userId\n                }));\n\n              case 4:\n                response = _context.sent;\n                dispatch({\n                  type: ADD_BOOK,\n                  payload: response.data\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; // export const addBookReading = (formValues) => async (dispatch, getState) => {\n//     const { userId } = getState().auth;\n//     const response = await books.post('/reading', { ...formValues, userId });\n//     dispatch({ type: ADD_BOOK_READING, payload: response.data});\n// }\n// export const addBookToRead = (formValues) => async (dispatch, getState) => {\n//     const { userId } = getState().auth;\n//     const response = await books.post('/toread', { ...formValues, userId });\n//     dispatch({ type: ADD_BOOK_TO_READ, payload: response.data});\n// }\n\nexport var fetchBooks = function fetchBooks() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return books.forEach(function (book) {\n                  book.get(\"/\".concat(book.bookShelf));\n                });\n\n              case 2:\n                _context2.next = 4;\n                return books.get(\"/read\");\n\n              case 4:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_BOOKS,\n                  payload: response.data\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; // export const fetchReadingBooks = () => async dispatch => {\n//     const response = await books.get('/reading')\n//     dispatch({ type: FETCH_BOOKS_READING, payload: response.data})\n// }\n// export const fetchToReadBooks = () => async dispatch => {\n//     const response = await books.get('/toread')\n//     dispatch({type: FETCH_BOOKS_TO_READ, payload: response.data})\n// }\n\nexport var editBook = function editBook(id, shelf, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return books.put(\"/\".concat(shelf, \"/\").concat(id), formValues);\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: EDIT_BOOK,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteBook = function deleteBook(id, shelf) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return books.delete(\"\".concat(shelf, \"/\").concat(id));\n\n              case 2:\n                dispatch({\n                  type: DELETE_BOOK,\n                  payload: id\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/actions/index.js"],"names":["books","SIGN_IN","SIGN_OUT","ADD_BOOK","FETCH_BOOKS","DELETE_BOOK","EDIT_BOOK","signIn","userId","type","payload","signOut","addBook","formValues","dispatch","getState","auth","shelf","bookShelf","post","response","data","fetchBooks","forEach","book","get","editBook","id","put","deleteBook","delete"],"mappings":"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","sourcesContent":["import books from '../api/books';\nimport { \n    SIGN_IN,\n    SIGN_OUT,\n    ADD_BOOK,\n    FETCH_BOOKS,\n    DELETE_BOOK,\n    EDIT_BOOK\n    } from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT,\n    };\n};\n\nexport const addBook = (formValues) => async (dispatch, getState) => {\n    const { userId } = getState().auth\n    const shelf = formValues.bookShelf;\n    const response = await books.post(`/${shelf}`, { ...formValues, userId });\n    \n    dispatch({ type: ADD_BOOK, payload: response.data});\n}\n\n// export const addBookReading = (formValues) => async (dispatch, getState) => {\n//     const { userId } = getState().auth;\n//     const response = await books.post('/reading', { ...formValues, userId });\n\n//     dispatch({ type: ADD_BOOK_READING, payload: response.data});\n// }\n\n// export const addBookToRead = (formValues) => async (dispatch, getState) => {\n//     const { userId } = getState().auth;\n//     const response = await books.post('/toread', { ...formValues, userId });\n\n//     dispatch({ type: ADD_BOOK_TO_READ, payload: response.data});\n// }\n\nexport const fetchBooks = () => async dispatch => {\n    await books.forEach(book => {\n        book.get(`/${book.bookShelf}`)\n    })\n    const response = await books.get(`/read`);\n\n    dispatch({ type: FETCH_BOOKS, payload: response.data})\n}\n\n// export const fetchReadingBooks = () => async dispatch => {\n//     const response = await books.get('/reading')\n\n//     dispatch({ type: FETCH_BOOKS_READING, payload: response.data})\n// }\n\n// export const fetchToReadBooks = () => async dispatch => {\n//     const response = await books.get('/toread')\n\n//     dispatch({type: FETCH_BOOKS_TO_READ, payload: response.data})\n// }\n\nexport const editBook = (id, shelf, formValues) => async dispatch => {\n    const response = await books.put(`/${shelf}/${id}`, formValues);\n\n    dispatch({ type: EDIT_BOOK, payload: response.data})\n}\n\nexport const deleteBook = (id, shelf) => async dispatch => {\n    await books.delete(`${shelf}/${id}`);\n\n    dispatch({ type: DELETE_BOOK, payload: id});\n}"]},"metadata":{},"sourceType":"module"}