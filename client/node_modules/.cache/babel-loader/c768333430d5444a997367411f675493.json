{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/BooksRead.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchReadBooks } from '../../actions';\n\nvar BooksRead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksRead, _React$Component);\n\n  function BooksRead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksRead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksRead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderList = function () {\n      return _this.props.readBooks.map(function (book) {\n        if (!book.userId) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(\"div\", {\n            className: \"item\",\n            key: book.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"large middle aligned icon camera\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, book.title, React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, book.author), _this.renderUser(book)));\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksRead, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchReadBooks();\n    }\n  }, {\n    key: \"renderUser\",\n    value: function renderUser(book) {\n      if (!book.userId) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Please log in\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Read books\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return BooksRead;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    readBooks: Object.values(state.readBooks),\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchReadBooks: fetchReadBooks\n})(BooksRead);","map":{"version":3,"sources":["/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/BooksRead.js"],"names":["React","connect","fetchReadBooks","BooksRead","renderList","props","readBooks","map","book","userId","id","title","author","renderUser","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;;IAEMC,S;;;;;;;;;;;;;;;;;;UAWFC,U,GAAa,YAAM;AACf,aAAO,MAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyB,UAAAC,IAAI,EAAI;AACpC,YAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AACd,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFD,MAEO;AACP,iBACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,GAAG,EAAED,IAAI,CAACE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAG,YAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKF,IAAI,CAACG,KADV,EAEI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKH,IAAI,CAACI,MADV,CAFJ,EAKK,MAAKC,UAAL,CAAgBL,IAAhB,CALL,CAFA,CADJ;AAYC;AACJ,OAjBM,CAAP;AAkBH,K;;;;;;;wCA7BmB;AAChB,WAAKH,KAAL,CAAWH,cAAX;AACH;;;+BAEUM,I,EAAM;AACb,UAAI,CAACA,IAAI,CAACC,MAAV,EACI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACP;;;6BAwBQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAEA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKL,UAAL,EAAjC,CAFA,CADJ;AAMH;;;;EAvCmBJ,KAAK,CAACc,S;;AA0C9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHV,IAAAA,SAAS,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,SAApB,CADR;AAEHG,IAAAA,MAAM,EAAEO,KAAK,CAACG,IAAN,CAAWV;AAFhB,GAAP;AAIH,CALD;;AAOA,eAAeR,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA,cAAc,EAAdA;AAAF,CAAlB,CAAP,CAA6CC,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchReadBooks } from '../../actions';\n\nclass BooksRead extends React.Component {\n    componentDidMount() {\n        this.props.fetchReadBooks();\n    }\n\n    renderUser(book) {\n        if (!book.userId)\n            return <div>Please log in</div>\n    }\n\n\n    renderList = () => {\n        return this.props.readBooks.map(book => {\n            if (!book.userId) {\n                return <div></div>\n            } else {\n            return (\n                <div className=\"item\" key={book.id}>\n                <i className=\"large middle aligned icon camera\" />\n                <div className=\"content\">\n                    {book.title}\n                    <div className=\"description\">\n                        {book.author}\n                    </div>\n                    {this.renderUser(book)}\n                </div>\n                </div>\n            );\n            }\n        });\n    }\n    \n    render() {\n        return (\n            <div>\n            <h2>Read books</h2>\n            <div className=\"ui celled list\">{this.renderList()}</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        readBooks: Object.values(state.readBooks),\n        userId: state.auth.userId \n    };\n};\n\nexport default connect(mapStateToProps, { fetchReadBooks })(BooksRead);"]},"metadata":{},"sourceType":"module"}