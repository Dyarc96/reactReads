{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport './GoogleAuth.css';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onAuthChange = function (isSignedIn) {\n      if (isSignedIn) {\n        _this.props.signIn(_this.auth.currentUser.get().getId());\n      } else {\n        _this.props.signOut();\n      }\n    };\n\n    _this.onSignInClick = function () {\n      _this.auth.signIn();\n    };\n\n    _this.onSignOutClick = function () {\n      _this.auth.signOut();\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    // Metoda po załadowaniu, opisuje metode uzycia autoryzacji google'a. Działanie GAPI.\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '408563209083-lp9dtt9pbsp4dl7a0ab9tj0fkj4gf55l.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.onAuthChange(_this2.auth.isSignedIn.get());\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    } // Nadpisuje stan w oparciu o ^ metode\n\n  }, {\n    key: \"renderAuthButton\",\n    //render buttonow na podstawie stanu\n    value: function renderAuthButton() {\n      if (this.props.isSignedIn === null) {\n        return null;\n      } else if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          className: \"auth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"google-button\",\n          onClick: this.onSignOutClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fab fa-google fa-2x\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), \"SignOut\"));\n      } else {\n        return React.createElement(\"button\", {\n          className: \"google-button\",\n          onClick: this.onSignInClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fab fa-google fa-2x\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), \"Sign in with google\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component); // zamienia state na props w tym komponencie\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn: signIn,\n  signOut: signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;AACA,OAAO,kBAAP;;IAEMC,U;;;;;;;;;;;;;;;;;;UAiBFC,Y,GAAe,UAACC,UAAD,EAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZ,cAAKC,KAAL,CAAWL,MAAX,CAAkB,MAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACH,OAFD,MAEO;AACH,cAAKJ,KAAL,CAAWJ,OAAX;AACH;AACJ,K;;UAGDS,a,GAAgB,YAAM;AAClB,YAAKJ,IAAL,CAAUN,MAAV;AACH,K;;UAGDW,c,GAAiB,YAAM;AACnB,YAAKL,IAAL,CAAUL,OAAV;AACH,K;;;;;;;AA/BD;wCACoB;AAAA;;AAChBW,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACnCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,UAAAA,QAAQ,EAAE,0EADU;AAEpBC,UAAAA,KAAK,EAAE;AAFa,SAAxB,EAGGC,IAHH,CAGQ,YAAM;AACV,UAAA,MAAI,CAACb,IAAL,GAAYM,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAAClB,YAAL,CAAkB,MAAI,CAACG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;;AACA,UAAA,MAAI,CAACF,IAAL,CAAUF,UAAV,CAAqBkB,MAArB,CAA4B,MAAI,CAACnB,YAAjC;AACH,SAPD;AAQH,OATD;AAUH,K,CAED;;;;AAmBA;uCACmB;AACf,UAAI,KAAKE,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAChC,eAAO,IAAP;AACH,OAFD,MAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAC9B,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAE,KAAKO,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,YADJ,CADJ;AAQH,OATM,MASA;AACH,eACI;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAE,KAAKD,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,wBADJ;AAMH;AACJ;;;6BAEQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKa,gBAAL,EAAN,CAAP;AACH;;;;EA5DoBzB,KAAK,CAAC0B,S,GA+D/B;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AAAEtB,IAAAA,UAAU,EAAEsB,KAAK,CAACpB,IAAN,CAAWF;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeL,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA,MAAM,EAANA,MAAD;AAASC,EAAAA,OAAO,EAAPA;AAAT,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport './GoogleAuth.css';\n\nclass GoogleAuth extends React.Component {\n\n    // Metoda po załadowaniu, opisuje metode uzycia autoryzacji google'a. Działanie GAPI.\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '408563209083-lp9dtt9pbsp4dl7a0ab9tj0fkj4gf55l.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    // Nadpisuje stan w oparciu o ^ metode\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n        } else {\n            this.props.signOut();\n        }\n    };\n\n    // logowanie po kliku \n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n\n    // wylogowywanie po kliku\n    onSignOutClick = () => {\n        this.auth.signOut();\n    };\n\n    //render buttonow na podstawie stanu\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <div className=\"auth\">\n                    <button className=\"google-button\" onClick={this.onSignOutClick}>\n                        <i className=\"fab fa-google fa-2x\" />\n                        SignOut\n                    </button>\n                </div>\n            );\n        } else {\n            return (\n                <button className=\"google-button\" onClick={this.onSignInClick}>\n                    <i className=\"fab fa-google fa-2x\" />\n                    Sign in with google\n                </button>\n            );\n        }\n    }\n    \n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\n// zamienia state na props w tym komponencie\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth);"]},"metadata":{},"sourceType":"module"}