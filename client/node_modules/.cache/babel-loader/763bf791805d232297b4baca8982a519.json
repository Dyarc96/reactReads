{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/ManageStore.js\";\n// FIRST SIMPLE ADD\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { addBook } from '../../actions/index';\nimport { connect } from 'react-redux';\nimport BookForm from './BookForm';\n\nvar ManageStore =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManageStore, _React$Component);\n\n  function ManageStore() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ManageStore);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ManageStore)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.formSubmit = function (formValues) {\n      _this.props.onSubmit(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(ManageStore, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Add a book\"));\n    }\n  }]);\n\n  return ManageStore;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    // Zadziała gdy uzytkownik nie wpisze tytułu ksiąki\n    errors.title = 'You must enter title';\n  }\n\n  if (!formValues.author) {\n    //Zadziała gdy uzytkownik nie wpisze autora\n    errors.author = 'You must enter author';\n  }\n\n  if (!formValues.bookType || formValues.bookType == null) {\n    errors.bookType = 'Please select type of book';\n  }\n\n  if (!formValues.bookShelf || formValues.bookShelf == null) {\n    errors.bookShelf = 'Please select shelf to store';\n  }\n\n  return errors;\n}; // const chooseShelf = (formValues) => {\n//     const shelves = {};\n//     if(formValues.bookShelf === \"read\") {\n//         shelves.bookShelf \n//     }\n// }\n\n\nvar formWrap = reduxForm({\n  form: 'read',\n  validate: validate\n})(ManageStore);\nexport default connect(null, {\n  addBook: addBook\n})(formWrap);","map":{"version":3,"sources":["/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/ManageStore.js"],"names":["React","Field","reduxForm","addBook","connect","BookForm","ManageStore","formSubmit","formValues","props","onSubmit","Component","validate","errors","title","author","bookType","bookShelf","formWrap","form"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,W;;;;;;;;;;;;;;;;;;UAEFC,U,GAAa,UAAAC,UAAU,EAAI;AACnB,YAAKC,KAAL,CAAWC,QAAX,CAAoBF,UAApB;AACP,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAKH;;;;EAZqBR,KAAK,CAACW,S;;AAehC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACJ,UAAD,EAAgB;AAC7B,MAAMK,MAAM,GAAG,EAAf;;AAEA,MAAG,CAACL,UAAU,CAACM,KAAf,EAAsB;AAClB;AACCD,IAAAA,MAAM,CAACC,KAAP,GAAe,sBAAf;AACJ;;AACD,MAAG,CAACN,UAAU,CAACO,MAAf,EAAuB;AACnB;AACAF,IAAAA,MAAM,CAACE,MAAP,GAAgB,uBAAhB;AACH;;AAED,MAAG,CAACP,UAAU,CAACQ,QAAZ,IAAyBR,UAAU,CAACQ,QAAX,IAAuB,IAAnD,EAAyD;AACrDH,IAAAA,MAAM,CAACG,QAAP,GAAkB,4BAAlB;AACH;;AAED,MAAG,CAACR,UAAU,CAACS,SAAZ,IAA0BT,UAAU,CAACS,SAAX,IAAwB,IAArD,EAA2D;AACvDJ,IAAAA,MAAM,CAACI,SAAP,GAAmB,8BAAnB;AACH;;AAED,SAAOJ,MAAP;AACH,CArBD,C,CAuBA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,IAAMK,QAAQ,GAAIhB,SAAS,CAAC;AACxBiB,EAAAA,IAAI,EAAE,MADkB;AAExBP,EAAAA,QAAQ,EAAEA;AAFc,CAAD,CAAT,CAGfN,WAHe,CAAlB;AAKA,eAAeF,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA,OAAO,EAAPA;AAAF,CAAP,CAAP,CAA2Be,QAA3B,CAAf","sourcesContent":["// FIRST SIMPLE ADD\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { addBook } from '../../actions/index';\nimport { connect } from 'react-redux';\nimport BookForm from './BookForm';\n\nclass ManageStore extends React.Component {\n\n    formSubmit = formValues => { \n            this.props.onSubmit(formValues)\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Add a book</h3>\n            </div>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    \n    if(!formValues.title) {\n        // Zadziała gdy uzytkownik nie wpisze tytułu ksiąki\n         errors.title = 'You must enter title';\n    }\n    if(!formValues.author) {\n        //Zadziała gdy uzytkownik nie wpisze autora\n        errors.author = 'You must enter author';\n    }\n\n    if(!formValues.bookType  || formValues.bookType == null) {\n        errors.bookType = 'Please select type of book';\n    }\n\n    if(!formValues.bookShelf  || formValues.bookShelf == null) {\n        errors.bookShelf = 'Please select shelf to store';\n    }\n\n    return errors;\n}\n\n// const chooseShelf = (formValues) => {\n//     const shelves = {};\n\n//     if(formValues.bookShelf === \"read\") {\n//         shelves.bookShelf \n//     }\n// }\n\nconst formWrap =  reduxForm({\n    form: 'read',\n    validate: validate\n})(ManageStore);\n\nexport default connect(null, { addBook })(formWrap);"]},"metadata":{},"sourceType":"module"}