{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/BooksReading.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchReadingBooks } from '../../actions/index';\n\nvar BooksReading =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksReading, _React$Component);\n\n  function BooksReading() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksReading);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksReading)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderList = function () {\n      return _this.props.readingBooks.map(function (book) {\n        if (!book.userId) {\n          return;\n        } else {\n          return React.createElement(\"div\", {\n            className: \"item\",\n            key: book.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"large middle aligned icon book\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, book.title, React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, book.author)));\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksReading, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchReadingBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Reading books\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return BooksReading;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    readingBooks: Object.values(state.readingBooks),\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchReadingBooks: fetchReadingBooks\n})(BooksReading);","map":{"version":3,"sources":["/Users/macbook/Desktop/html,css,js/udemyReact/reactreads/client/src/components/books/BooksReading.js"],"names":["React","connect","fetchReadingBooks","BooksReading","renderList","props","readingBooks","map","book","userId","id","title","author","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAKFC,U,GAAa,YAAM;AACf,aAAO,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,UAAAC,IAAI,EAAI;AACvC,YAAG,CAACA,IAAI,CAACC,MAAT,EAAiB;AACb;AACH,SAFD,MAEO;AACP,iBACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,GAAG,EAAED,IAAI,CAACE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAG,YAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKF,IAAI,CAACG,KADV,EAEI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKH,IAAI,CAACI,MADV,CAFJ,CAFA,CADJ;AAWC;AACJ,OAhBM,CAAP;AAiBH,K;;;;;;;wCAtBmB;AAChB,WAAKP,KAAL,CAAWH,iBAAX;AACH;;;6BAsBQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKE,UAAL,EAAjC,CAFA,CADJ;AAMH;;;;EAhCsBJ,KAAK,CAACa,S;;AAmCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHT,IAAAA,YAAY,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,YAApB,CADX;AAEHG,IAAAA,MAAM,EAAEM,KAAK,CAACG,IAAN,CAAWT;AAFhB,GAAP;AAIH,CALD;;AAOA,eAAeR,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA,iBAAiB,EAAjBA;AAAF,CAAlB,CAAP,CAAgDC,YAAhD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchReadingBooks } from '../../actions/index';\n\nclass BooksReading extends React.Component {\n    componentDidMount() {\n        this.props.fetchReadingBooks();\n    }\n\n    renderList = () => {\n        return this.props.readingBooks.map(book => {\n            if(!book.userId) {\n                return\n            } else {\n            return (\n                <div className=\"item\" key={book.id}>\n                <i className=\"large middle aligned icon book\" />\n                <div className=\"content\">\n                    {book.title}\n                    <div className=\"description\">\n                        {book.author}\n                    </div>\n                </div>\n                </div>\n            );\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            <h2>Reading books</h2>\n            <div className=\"ui celled list\">{this.renderList()}</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        readingBooks: Object.values(state.readingBooks),\n        userId: state.auth.userId\n    };\n}\n\nexport default connect(mapStateToProps, { fetchReadingBooks })(BooksReading);"]},"metadata":{},"sourceType":"module"}